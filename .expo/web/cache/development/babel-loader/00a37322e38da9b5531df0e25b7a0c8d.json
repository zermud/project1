{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _NativeSourceCode = _interopRequireDefault(require(\"../../NativeModules/specs/NativeSourceCode\"));\n\nvar _cachedDevServerURL;\n\nvar _cachedFullBundleURL;\n\nvar FALLBACK = 'http://localhost:8081/';\n\nfunction getDevServer() {\n  var _cachedDevServerURL2;\n\n  if (_cachedDevServerURL === undefined) {\n    var scriptUrl = _NativeSourceCode.default.getConstants().scriptURL;\n\n    var match = scriptUrl.match(/^https?:\\/\\/.*?\\//);\n    _cachedDevServerURL = match ? match[0] : null;\n    _cachedFullBundleURL = match ? scriptUrl : null;\n  }\n\n  return {\n    url: (_cachedDevServerURL2 = _cachedDevServerURL) != null ? _cachedDevServerURL2 : FALLBACK,\n    fullBundleUrl: _cachedFullBundleURL,\n    bundleLoadedFromServer: _cachedDevServerURL !== null\n  };\n}\n\nmodule.exports = getDevServer;","map":{"version":3,"sources":["C:/Users/Anonymous/project1/node_modules/react-native/Libraries/Core/Devtools/getDevServer.js"],"names":["_cachedDevServerURL","_cachedFullBundleURL","FALLBACK","getDevServer","undefined","scriptUrl","NativeSourceCode","getConstants","scriptURL","match","url","fullBundleUrl","bundleLoadedFromServer","module","exports"],"mappings":";;AAUA;;AAEA,IAAIA,mBAAJ;;AACA,IAAIC,oBAAJ;;AACA,IAAMC,QAAQ,GAAG,wBAAjB;;AAaA,SAASC,YAAT,GAAuC;AAAA;;AACrC,MAAIH,mBAAmB,KAAKI,SAA5B,EAAuC;AACrC,QAAMC,SAAS,GAAGC,0BAAiBC,YAAjB,GAAgCC,SAAlD;;AACA,QAAMC,KAAK,GAAGJ,SAAS,CAACI,KAAV,CAAgB,mBAAhB,CAAd;AACAT,IAAAA,mBAAmB,GAAGS,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc,IAAzC;AACAR,IAAAA,oBAAoB,GAAGQ,KAAK,GAAGJ,SAAH,GAAe,IAA3C;AACD;;AAED,SAAO;AACLK,IAAAA,GAAG,0BAAEV,mBAAF,mCAAyBE,QADvB;AAELS,IAAAA,aAAa,EAAEV,oBAFV;AAGLW,IAAAA,sBAAsB,EAAEZ,mBAAmB,KAAK;AAH3C,GAAP;AAKD;;AAEDa,MAAM,CAACC,OAAP,GAAiBX,YAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport NativeSourceCode from '../../NativeModules/specs/NativeSourceCode';\n\nlet _cachedDevServerURL: ?string;\nlet _cachedFullBundleURL: ?string;\nconst FALLBACK = 'http://localhost:8081/';\n\ntype DevServerInfo = {\n  url: string,\n  fullBundleUrl: ?string,\n  bundleLoadedFromServer: boolean,\n  ...\n};\n\n/**\n * Many RN development tools rely on the development server (packager) running\n * @return URL to packager with trailing slash\n */\nfunction getDevServer(): DevServerInfo {\n  if (_cachedDevServerURL === undefined) {\n    const scriptUrl = NativeSourceCode.getConstants().scriptURL;\n    const match = scriptUrl.match(/^https?:\\/\\/.*?\\//);\n    _cachedDevServerURL = match ? match[0] : null;\n    _cachedFullBundleURL = match ? scriptUrl : null;\n  }\n\n  return {\n    url: _cachedDevServerURL ?? FALLBACK,\n    fullBundleUrl: _cachedFullBundleURL,\n    bundleLoadedFromServer: _cachedDevServerURL !== null,\n  };\n}\n\nmodule.exports = getDevServer;\n"]},"metadata":{},"sourceType":"script"}