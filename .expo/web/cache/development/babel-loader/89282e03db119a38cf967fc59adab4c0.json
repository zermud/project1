{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createNavigationContainerRef;\nexports.NOT_INITIALIZED_ERROR = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _routers = require(\"@react-navigation/routers\");\n\nvar NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexports.NOT_INITIALIZED_ERROR = NOT_INITIALIZED_ERROR;\n\nfunction createNavigationContainerRef() {\n  var methods = [].concat((0, _toConsumableArray2.default)(Object.keys(_routers.CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);\n  var ref = (0, _extends2.default)({}, methods.reduce(function (acc, name) {\n    acc[name] = function () {\n      if (ref.current == null) {\n        console.error(NOT_INITIALIZED_ERROR);\n      } else {\n        var _ref$current;\n\n        return (_ref$current = ref.current)[name].apply(_ref$current, arguments);\n      }\n    };\n\n    return acc;\n  }, {}), {\n    isReady: function isReady() {\n      if (ref.current == null) {\n        return false;\n      }\n\n      return ref.current.isReady();\n    },\n    current: null\n  });\n  return ref;\n}","map":{"version":3,"sources":["createNavigationContainerRef.tsx"],"names":["NOT_INITIALIZED_ERROR","methods","Object","ref","acc","console","isReady","current"],"mappings":";;;;;;;;;;;;AAAA;;AAIO,IAAMA,qBAAqB,GAA3B,+QAAA;;;AAGQ,SAAA,4BAAA,GAEmC;AAChD,MAAMC,OAAO,8CACRC,MAAM,CAANA,IAAAA,CADW,sBACXA,CADQ,IAAG,aAAH,EAAG,gBAAH,EAAG,WAAH,EAAG,UAAH,EAAG,WAAH,EAAG,cAAH,EAAG,UAAH,EAAG,WAAH,EAAG,iBAAH,EAAb,mBAAa,EAAb;AAcA,MAAMC,GAAiD,8BAClD,OAAO,CAAP,MAAA,CAAoB,UAAA,GAAA,EAAA,IAAA,EAAe;AACpCC,IAAAA,GAAG,CAAHA,IAAG,CAAHA,GAAY,YAAoB;AAC9B,UAAID,GAAG,CAAHA,OAAAA,IAAJ,IAAA,EAAyB;AACvBE,QAAAA,OAAO,CAAPA,KAAAA,CAAAA,qBAAAA;AADF,OAAA,MAEO;AAAA;;AAEL,eAAOF,gBAAAA,GAAG,CAAHA,OAAAA,EAAP,IAAOA,gCAAP;AACD;AANHC,KAAAA;;AAQA,WAAA,GAAA;AATC,GAAA,EADqD,EACrD,CADkD;AAYrDE,IAAAA,OAAO,EAAE,mBAAM;AACb,UAAIH,GAAG,CAAHA,OAAAA,IAAJ,IAAA,EAAyB;AACvB,eAAA,KAAA;AACD;;AAED,aAAOA,GAAG,CAAHA,OAAAA,CAAP,OAAOA,EAAP;AAjBsD,KAAH;AAmBrDI,IAAAA,OAAO,EAAE;AAnB4C,IAAvD;AAsBA,SAAA,GAAA;AACD","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\n\nimport type { NavigationContainerRefWithCurrent } from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (ref.current == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          // @ts-expect-error: this is ok\n          return ref.current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n    isReady: () => {\n      if (ref.current == null) {\n        return false;\n      }\n\n      return ref.current.isReady();\n    },\n    current: null,\n  };\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"script"}