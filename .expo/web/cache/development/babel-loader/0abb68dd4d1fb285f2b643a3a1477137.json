{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar TurboModuleRegistry = _interopRequireWildcard(require(\"../../TurboModule/TurboModuleRegistry\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar NativeModule = TurboModuleRegistry.getEnforcing('SourceCode');\nvar constants = null;\nvar NativeSourceCode = {\n  getConstants: function getConstants() {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n\n    return constants;\n  }\n};\nvar _default = NativeSourceCode;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Anonymous/project1/node_modules/react-native/Libraries/NativeModules/specs/NativeSourceCode.js"],"names":["NativeModule","TurboModuleRegistry","getEnforcing","constants","NativeSourceCode","getConstants"],"mappings":";;;;;AAWA;;;;;;AAQA,IAAMA,YAAY,GAAGC,mBAAmB,CAACC,YAApB,CAAuC,YAAvC,CAArB;AACA,IAAIC,SAAS,GAAG,IAAhB;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,YADuB,0BAGpB;AACD,QAAIF,SAAS,IAAI,IAAjB,EAAuB;AACrBA,MAAAA,SAAS,GAAGH,YAAY,CAACK,YAAb,EAAZ;AACD;;AAED,WAAOF,SAAP;AACD;AATsB,CAAzB;eAYeC,gB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    scriptURL: string,\n  |};\n}\n\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('SourceCode');\nlet constants = null;\n\nconst NativeSourceCode = {\n  getConstants(): {|\n    scriptURL: string,\n  |} {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n\n    return constants;\n  },\n};\n\nexport default NativeSourceCode;\n"]},"metadata":{},"sourceType":"script"}